/*
 * Copyright (c) 2015-2021, Episode Six and/or its affiliates. All rights reserved.
 * EPISODE SIX PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 * THIS IS CONFIDENTIAL AND PROPRIETARY TO EPISODE SIX, and any
 * copying, reproduction, redistribution, dissemination, modification, or
 * other use, in whole or in part, is strictly prohibited without the prior
 * written consent of (or as may be specifically permitted in a fully signed
 * agreement with) Episode Six.   Violations may result in severe civil and/or
 * criminal penalties, and Episode Six will enforce its rights to the maximum
 * extent permitted by law.
 */

import axios from 'axios';


// This file has been auto generated by the java class GenerateAxiosClient
const CommerceAPI = (config) => {
    const { baseURL, ...others } = config;
    const instance = axios.create({ baseURL: `${baseURL}/v1/commerce/`, ...others });

    return {
        interceptors: instance.interceptors,
        attachCard: (customerIdentifier, approvalNumber, dto) => instance.post(`customers/${customerIdentifier}/attachCard/${approvalNumber}`, dto),
        create: dto => instance.post('accounts', dto),
        estimateCreate: dto => instance.put('accounts/estimate', dto),
        estimateLoad: (customerIdentifier, dto) => instance.put(`customers/${customerIdentifier}/load/estimate`, dto),
        // eslint-disable-next-line max-len
        estimateP2P: (customerIdentifier, { fromCurrency, amount, toCustomerNumber }) => instance.put(`customers/${customerIdentifier}/p2p/estimate`, { params: { 'from-currency': fromCurrency, amount, 'to-customer-number': toCustomerNumber } }),
        // eslint-disable-next-line max-len
        estimatePurchase: (customerIdentifier, { fromCurrency, amount }) => instance.put(`customers/${customerIdentifier}/purchase/estimate`, { params: { 'from-currency': fromCurrency, amount } }),
        // eslint-disable-next-line max-len
        estimateWithdraw: (customerIdentifier, { fromCurrency, amount }) => instance.put(`customers/${customerIdentifier}/withdraw/estimate`, { params: { 'from-currency': fromCurrency, amount } }),
        load: (customerIdentifier, dto) => instance.post(`customers/${customerIdentifier}/load`, dto),
        // eslint-disable-next-line max-len
        p2p: (customerIdentifier, { fromCurrency, amount, toCustomerNumber }) => instance.post(`customers/${customerIdentifier}/p2p`, { params: { 'from-currency': fromCurrency, amount, 'to-customer-number': toCustomerNumber } }),
        // eslint-disable-next-line max-len
        purchase: (customerIdentifier, { fromCurrency, amount }) => instance.post(`customers/${customerIdentifier}/purchase`, { params: { 'from-currency': fromCurrency, amount } }),
        // eslint-disable-next-line max-len
        reversal: (customerIdentifier, transactionId) => instance.post(`customers/${customerIdentifier}/reversal`, { params: { 'transaction-id': transactionId } }),
        // eslint-disable-next-line max-len
        withdraw: (customerIdentifier, { fromCurrency, amount }) => instance.post(`customers/${customerIdentifier}/withdraw`, { params: { 'from-currency': fromCurrency, amount } }),
    };
};

export default CommerceAPI;
