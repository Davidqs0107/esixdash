/*
 * Copyright (c) 2015-2021, Episode Six and/or its affiliates. All rights reserved.
 * EPISODE SIX PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 * THIS IS CONFIDENTIAL AND PROPRIETARY TO EPISODE SIX, and any
 * copying, reproduction, redistribution, dissemination, modification, or
 * other use, in whole or in part, is strictly prohibited without the prior
 * written consent of (or as may be specifically permitted in a fully signed
 * agreement with) Episode Six.   Violations may result in severe civil and/or
 * criminal penalties, and Episode Six will enforce its rights to the maximum
 * extent permitted by law.
 */

import axios from 'axios';


// This file has been auto generated by the java class GenerateAxiosClient
const PartnerAPI = (config) => {
    const { baseURL, ...others } = config;
    const instance = axios.create({ baseURL: `${baseURL}/v1/partners/`, ...others });

    return {
        interceptors: instance.interceptors,
        addBlockedReferenceNumber: (partnerName, dto) => instance.post(`${partnerName}/blockedReferences`, dto),
        addLinkedPartner: (partnerName, dto) => instance.post(`${partnerName}/linkedPartners`, dto),
        create: dto => instance.post('exchanges', dto),
        create2: dto => instance.post('', dto),
        createPartnerProgram: (partnerName, dto) => instance.post(`${partnerName}/programs`, dto),
        deleteExchange: exchangeName => instance.delete(`exchanges/${exchangeName}`),
        deleteExchangeCurrencyPairRate: (exchangeName, exchangePairId) => instance.delete(`exchanges/${exchangeName}/pairs/${exchangePairId}`),
        deleteExchangeMargin: (exchangeName, currency) => instance.delete(`exchanges/${exchangeName}/margins/${currency}`),
        // eslint-disable-next-line max-len
        deleteExchangeMargin2: (exchangeName, currency, programName, feePlanName) => instance.delete(`exchanges/${exchangeName}/margins/${currency}/${programName}/${feePlanName}`),
        deletePartnerProgram: (partnerName, partnerProgramId) => instance.delete(`${partnerName}/programs/${partnerProgramId}`),
        get: exchangeName => instance.get(`exchanges/${exchangeName}`),
        // eslint-disable-next-line max-len
        getBlockedReferences: (partnerName, { count, startIndex, ascending }) => instance.get(`${partnerName}/blockedReferences`, { params: { count, 'start-index': startIndex, ascending } }),
        getExchangeCurrencyPairRate: (exchangeName, exchangePairId) => instance.get(`exchanges/${exchangeName}/pairs/${exchangePairId}`),
        getExchangeCurrencyPairRates: exchangeName => instance.get(`exchanges/${exchangeName}/pairs`),
        getExchangeMargin: (exchangeName, currency) => instance.get(`exchanges/${exchangeName}/margins/${currency}`),
        // eslint-disable-next-line max-len
        getExchangeMargin2: (exchangeName, currency, programName, feePlanName) => instance.get(`exchanges/${exchangeName}/margins/${currency}/${programName}/${feePlanName}`),
        getExchangeMargins: exchangeName => instance.get(`exchanges/${exchangeName}/margins`),
        getExchangePrograms: exchangeName => instance.get(`exchanges/${exchangeName}/programs`),
        getPartnerDTO: partnerName => instance.get(`${partnerName}`),
        getPartnerProfile: partnerName => instance.get(`${partnerName}/profile`),
        getPartnerPrograms: partnerName => instance.get(`${partnerName}/programs`),
        insertOrUpdateExchangeCurrencyPairRate: (exchangeName, dto) => instance.post(`exchanges/${exchangeName}/pairs`, dto),
        list: () => instance.get(''),
        listExchanges: () => instance.get('exchanges'),
        listLinkedPartners: () => instance.get('linkedPartners'),
        listLinkedPartners2: partnerName => instance.get(`${partnerName}/linkedPartners`),
        removeLinkedPartner: (partnerName, linkedPartnerName) => instance.delete(`${partnerName}/linkedPartners/${linkedPartnerName}`),
        removedBlockedReferenceNumber: (partnerName, dto) => instance.post(`${partnerName}/blockedReferences/remove`, dto),
        updateExchangeMargin: (exchangeName, dto) => instance.post(`exchanges/${exchangeName}/margins`, dto),
    };
};

export default PartnerAPI;
