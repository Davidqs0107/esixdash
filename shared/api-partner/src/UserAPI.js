/*
 * Copyright (c) 2015-2021, Episode Six and/or its affiliates. All rights reserved.
 * EPISODE SIX PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 * THIS IS CONFIDENTIAL AND PROPRIETARY TO EPISODE SIX, and any
 * copying, reproduction, redistribution, dissemination, modification, or
 * other use, in whole or in part, is strictly prohibited without the prior
 * written consent of (or as may be specifically permitted in a fully signed
 * agreement with) Episode Six.   Violations may result in severe civil and/or
 * criminal penalties, and Episode Six will enforce its rights to the maximum
 * extent permitted by law.
 */

import axios from 'axios';


// This file has been auto generated by the java class GenerateAxiosClient
const UserAPI = (config) => {
    const { baseURL, ...others } = config;
    const instance = axios.create({ baseURL: `${baseURL}/v1/users/`, ...others });

    return {
        interceptors: instance.interceptors,
        blockUser: partnerUserId => instance.post(`${partnerUserId}/lock`),
        changePassword: dto => instance.post('changepassword', dto),
        create: dto => instance.post('', dto),
        get: partnerUserId => instance.get(`${partnerUserId}`),
        getRoles: partnerUserId => instance.get(`${partnerUserId}/roles`),
        getStores: partnerUserId => instance.get(`${partnerUserId}/stores`),
        // eslint-disable-next-line object-curly-newline,max-len
        list: ({ userName, first, last, role, state, count, startIndex, ascending }) => instance.get('', { params: { 'user-name': userName, first, last, role, state, count, 'start-index': startIndex, ascending } }),
        unlockUser: partnerUserId => instance.post(`${partnerUserId}/unlock`),
        update: (partnerUserId, dto) => instance.post(`${partnerUserId}`, dto),
        updateRoles: (partnerUserId, dto) => instance.post(`${partnerUserId}/roles`, dto),
        updateStores: (partnerUserId, dto) => instance.post(`${partnerUserId}/stores`, dto),
    };
};

export default UserAPI;
