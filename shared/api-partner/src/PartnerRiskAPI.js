/*
 * Copyright (c) 2015-2021, Episode Six and/or its affiliates. All rights reserved.
 * EPISODE SIX PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 * THIS IS CONFIDENTIAL AND PROPRIETARY TO EPISODE SIX, and any
 * copying, reproduction, redistribution, dissemination, modification, or
 * other use, in whole or in part, is strictly prohibited without the prior
 * written consent of (or as may be specifically permitted in a fully signed
 * agreement with) Episode Six.   Violations may result in severe civil and/or
 * criminal penalties, and Episode Six will enforce its rights to the maximum
 * extent permitted by law.
 */

import axios from 'axios';


// This file has been auto generated by the java class GenerateAxiosClient
const PartnerRiskAPI = (config) => {
    const { baseURL, ...others } = config;
    const instance = axios.create({ baseURL: `${baseURL}/v1/risk/`, ...others });

    return {
        interceptors: instance.interceptors,
        createRiskLevel: dto => instance.post('levels', dto),
        createUpdateRiskConfig: (securityLevel, dto) => instance.post(`levels/${securityLevel}/configs`, dto),
        deleteRiskConfig: (securityLevel, paramName) => instance.delete(`levels/${securityLevel}/configs/${paramName}`),
        deleteRiskLevel: securityLevel => instance.delete(`levels/${securityLevel}`),
        getRiskConfig: (securityLevel, paramName) => instance.get(`levels/${securityLevel}/configs/${paramName}`),
        getRiskConfigs: securityLevel => instance.get(`levels/${securityLevel}/configs`),
        getRiskLevel: securityLevel => instance.get(`levels/${securityLevel}`),
        getRiskLevels: () => instance.get('levels'),
        getRiskParams: partnerName => instance.get(`${partnerName}/params`),
    };
};

export default PartnerRiskAPI;
