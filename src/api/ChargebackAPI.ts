/*
 * Copyright (c) 2015-2023, Episode Six and/or its affiliates. All rights reserved.
 * EPISODE SIX PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 * THIS IS CONFIDENTIAL AND PROPRIETARY TO EPISODE SIX, and any
 * copying, reproduction, redistribution, dissemination, modification, or
 * other use, in whole or in part, is strictly prohibited without the prior
 * written consent of (or as may be specifically permitted in a fully signed
 * agreement with) Episode Six.   Violations may result in severe civil and/or
 * criminal penalties, and Episode Six will enforce its rights to the maximum
 * extent permitted by law.
 */

import axios from "axios";

// This file has been auto generated by the java class GenerateAxiosClient
const ChargebackAPI = (config: any) => {
  const { partnerEndpoint, ...others } = config;
  const instance = axios.create({
    baseURL: `${partnerEndpoint}/v1/customers/`,
    ...others,
  });

  return {
    interceptors: instance.interceptors,
    cancelChargeback: (customerIdentifier: any, chargebackId: any) =>
      instance.put(`${customerIdentifier}/chargebacks/${chargebackId}/cancel`),
    createChargeback: (customerIdentifier: any, dto: any) =>
      instance.post(`${customerIdentifier}/chargebacks`, dto),
    // eslint-disable-next-line max-len
    getAvailableChargebackReasons: (customerIdentifier: any, isoMessageId: any) =>
      instance.get(
        `${customerIdentifier}/chargebacks/chargebackReasons/${isoMessageId}`
      ),
    getChargeback: (customerIdentifier: any, chargebackId: any) =>
      instance.get(`${customerIdentifier}/chargebacks/${chargebackId}`),
    getChargebackMemos: (customerIdentifier: any, chargebackId: any) =>
      instance.get(`${customerIdentifier}/chargebacks/${chargebackId}/memos`),
    // eslint-disable-next-line max-len
    getChargebackMessage: (
      customerIdentifier: any,
      chargebackId: any,
      chargebackMessageId: any
    ) =>
      instance.get(
        `${customerIdentifier}/chargebacks/${chargebackId}/messages/${chargebackMessageId}`
      ),
    getChargebackMessages: (customerIdentifier: any, chargebackId: any) =>
      instance.get(
        `${customerIdentifier}/chargebacks/${chargebackId}/messages`
      ),
    getChargebacks: (customerIdentifier: any) =>
      instance.get(`${customerIdentifier}/chargebacks`),
    getTransactionChain: (customerIdentifier: any, transactionId: any) =>
      instance.get(
        `${customerIdentifier}/chargebacks/${transactionId}/transactionChain`
      ),
    reverseChargeback: (customerIdentifier: any, chargebackId: any) =>
      instance.put(`${customerIdentifier}/chargebacks/${chargebackId}/reverse`),
  };
};

export default ChargebackAPI;
